@page "/query-tool"

@using System.ComponentModel.DataAnnotations
@using Microsoft.Extensions.Logging
@inject ILogger<QueryTool> Logger

<h3>Query Tool - Template testing</h3>

<!-- Manual input connection template -->
<div class="container mt-5">
    <form>
        <fieldset class="form-group">
            <div class="row">
                <legend class="col-form-label col-sm-2 pt-0">
                    Connection Type
                </legend>
                <div class="col-sm-10">
                    @* Template this out? https://docs.microsoft.com/en-us/aspnet/core/blazor/forms-validation?view=aspnetcore-3.1#radio-buttons *@
                    @foreach (var connectionType in ConnectionTypes)
                    {
                        <div class="form-check">
                            <input class="form-check-input"
                                   type="radio"
                                   name="connectionTypeRadios"
                                   id=@connectionType.Id
                                   value=@connectionType.Value
                                   checked=@(SelectedConnectionTypeValue.Equals(connectionType.Value, StringComparison.OrdinalIgnoreCase))
                                   @onchange="OnRadioButtonChange" />
                            <label for=@connectionType.Id>@connectionType.Label</label>
                        </div>
                    }

                    <p>Currently selected: @SelectedConnectionTypeValue</p>

                    <small id="connectionTypesHelpBlock"
                           class="form-text text-muted">
                        Which source to use to search for user data
                    </small>
                </div>
            </div>
        </fieldset>
        <div class="form-group row">
            <label for="tenantIdInput" class="col-sm-2 col-form-label">Tenant ID</label>
            <div class="col-sm-10">
                <input class="form-control"
                       type="text"
                       id="tenantIdInput"
                       placeholder="Tenant ID" />
            </div>
        </div>
        <div class="form-group row">
            <label for="spUrlInput" class="col-sm-2 col-form-label">SharePoint URL</label>
            <div class="col-sm-10">
                <input class="form-control"
                       type="text"
                       id="spUrlInput"
                       placeholder="SharePoint URL" />
            </div>
        </div>
        <div class="form-group row">
            <label for="clientIdInput" class="col-sm-2 col-form-label">Client ID</label>
            <div class="col-sm-10">
                <input class="form-control"
                       type="text"
                       id="clientIdInput"
                       placeholder="Client ID" />
            </div>
        </div>
        <div class="form-group row">
            <label for="clientIdSecret" class="col-sm-2 col-form-label">Client Secret</label>
            <div class="col-sm-10">
                <input class="form-control"
                       type="password"
                       id="clientIdSecret"
                       placeholder="Client Secret" />
                <hr />
                <button class="btn btn-primary" type="submit">
                    Connect
                </button>
            </div>
        </div>
    </form>
</div>
<!-- MS Graph user search component template -->
<div class="container mt-5">
    <form>
        <div class="form-group row">
            <label for="msgUserEmailOrGuid"
                   class="col-sm-2 col-form-label">User</label>
            <div class="col-sm-10">
                <input class="form-control"
                       type="text"
                       id="msgUserEmailOrGuid"
                       placeholder="User email or ID to search" />
                <hr />
                <button class="btn btn-primary" type="submit">
                    Search MS Graph
                </button>
            </div>
        </div>
    </form>
</div>
<!-- MS Graph group search component template -->
<div class="container mt-5">
    <form>
        <div class="form-group row">
            <label for="msgGroupId" class="col-sm-2 col-form-label">Group</label>
            <div class="col-sm-10">
                <input class="form-control"
                       type="text"
                       id="msgGroupId"
                       placeholder="Group ID to search" />
                <hr />
                <button class="btn btn-primary" type="submit">
                    Search MS Graph
                </button>
            </div>
        </div>
    </form>
</div>
<!-- SharePoint user search component template -->
<div class="container mt-5">
    <form>
        <div class="form-group row">
            <label for="spUserEmailOrId" class="col-sm-2 col-form-label">User</label>
            <div class="col-sm-10">
                <input class="form-control"
                       type="text"
                       id="spUserEmailOrId"
                       placeholder="User ID to search" />
                <hr />
                <button class="btn btn-primary" type="submit">
                    Search SharePoint
                </button>
            </div>
        </div>
    </form>
</div>
<!-- SharePoint group search component template -->
<div class="container mt-5">
    <form>
        <div class="form-group row">
            <label for="spGroupId" class="col-sm-2 col-form-label">Group</label>
            <div class="col-sm-10">
                <input class="form-control"
                       type="text"
                       id="spGroupId"
                       placeholder="Group ID to search" />
                <hr />
                <button class="btn btn-primary" type="submit">
                    Search SharePoint
                </button>
            </div>
        </div>
    </form>
</div>
<!-- SharePoint result source search component template -->
<div class="container mt-5">
    <form>
        <div class="form-group row">
            <label for="spResultSource" class="col-sm-2 col-form-label">Result Source</label>
            <div class="col-sm-10">
                <input class="form-control"
                       type="text"
                       id="spResultSource"
                       placeholder="Result Source ID to search" />
                <hr />
                <button class="btn btn-primary" type="submit">
                    Search SharePoint
                </button>
            </div>
        </div>
    </form>
</div>

@code {
    public string SelectedConnectionTypeValue = MsGraphConnection.Value; // make sure this is set through the UI, else null it out

    void OnRadioButtonChange(ChangeEventArgs changeEventArgs)
    {
        SelectedConnectionTypeValue = changeEventArgs.Value.ToString();
    }


    public class ConnectionType
    {
        private string _id;
        public string Id
        {
            get { return _id; }
            set
            {
                // we force capitalise the first char it is more readable in dev tools
                // connectionTypemsGraph vs connectionTypeMsGraph
                if (!char.IsUpper(value[0]))
                {
                    _id = "connectionType" + value.First().ToString().ToUpper() + value.Substring(1);
                }
                else
                {
                    _id = "connectionType" + value;
                }
            }
        }
        public string Value { get; set; }
        public string Label { get; set; }
    };
    static ConnectionType MsGraphConnection = new ConnectionType
    {
        Id = "MsGraph",
        Label = "MS Graph",
        Value = "msGraph"
    };
    static ConnectionType SharePointConnection = new ConnectionType
    {
        Id = "SharePoint",
        Label = "SharePoint",
        Value = "msSharePoint"
    };
    List<ConnectionType> ConnectionTypes = new List<ConnectionType>() {
        MsGraphConnection,
        SharePointConnection
    };

    public string SelectedConnectionType = "test";

    //protected async override Task OnInitializedAsync()
    //{
    //    //ConnectionTypes.Add()
    //}

}
